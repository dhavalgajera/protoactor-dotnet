name: Build and deploy

on:
  push:
    branches:
      - dev
    tags:
      - '*'

jobs:

  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --entrypoint redis-server
      mongodb:
        image: mongo
        ports:
          - 27017/tcp

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Build
        run: dotnet build -c Release

      - name: Run tests netcoreapp3.1
        env:
          ConnectionStrings__MongoDB: mongodb://localhost:${{ job.services.mongodb.ports[27017] }}/ProtoMongo
          ConnectionStrings__Redis: localhost:${{ job.services.redis.ports[6379] }},syncTimeout=10000
        run: |
          dotnet test -c Release --framework netcoreapp3.1 --no-build

      - name: Run tests net5.0
        env:
          ConnectionStrings__MongoDB: mongodb://localhost:${{ job.services.mongodb.ports[27017] }}/ProtoMongo
          ConnectionStrings__Redis: localhost:${{ job.services.redis.ports[6379] }},syncTimeout=10000
        run: |
          dotnet test -c Release --framework net5.0 --no-build
        
  nuget:
    runs-on: windows-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Create and push NuGet package
        run: |
          dotnet pack -c Release -o nuget -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg
          dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
